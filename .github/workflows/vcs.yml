# This workflow checks whether pull request is pure forked/rebased after latest release

name: VCS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  git_workflow:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Get latest release tag name
      run: |
        if [ "pull_request" == "${{ github.event_name }}" ]; then
            API_RELEASE_URL=$(echo "${{ github.event.pull_request.base.repo.releases_url }}")
        else
            API_RELEASE_URL=$(echo "${{ github.event.repository.releases_url }}")
        fi
        echo "'${API_RELEASE_URL}'" # dbg
        API_RELEASE_URL=$(echo "${API_RELEASE_URL}" | sed 's|.....$||')
        echo "'${API_RELEASE_URL}'" # dbg
        API_RELEASE_URL=$(echo "${API_RELEASE_URL}/latest")
        echo "'${API_RELEASE_URL}'" # dbg

        LATEST_RELEASE_TAG=$(
            curl \
                --silent \
                --header "Accept: application/vnd.github.v3+json" \
                --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                ${API_RELEASE_URL} \
            | \
            jq \
                --raw-output \
                '.tag_name' \
            )

        # dbg
        echo "'${LATEST_RELEASE_TAG}'"

        export GIT_ANCESTOR=${LATEST_RELEASE_TAG}
        if bash cicd/git_workflow.sh; then
            echo "GIT workflow OK"
        else
            echo "Please, rebase the branch after ${LATEST_RELEASE_TAG}"
            exit 1
        fi

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
